logging:
  path_base: '/'
  unique_string: 'PLACEHOLDER'

dataset:
  name: SST-2
  path: datasets/TextClassification/SST-2

reproduce:  # seed for reproduction 
  seed: 0  # a seed for all random part, PLACEHOLDER

# plm:
#   model_name: t5
#   model_path: t5-small
#   optimize:
#     freeze_para: True
#     lr: 1.0e-5
#     weight_decay: 0.0
#     scheduler:
#       type: 
#       num_warmup_steps: 500

plm:
  model_name: gpt2_style_lm
  model_path: PLACEHOLDER
  optimize:
    freeze_para: True # False, True
    # lr: 0.00003
    # weight_decay: 0.01

dataloader:
  max_seq_length: 256  # max_seq_length
  decoder_max_length: 3 # the decoder max length to truncate decoder input sequence
                    # if it is an encoder-decoder architecture. Note that it's not equavalent
                    # to generation.max_length which is used merely in the generation phase.
  truncate_method: "head" # choosing from balanced, head, tail
  decode_from_pad: true

train:
  batch_size: 4
  gradient_accumulation_steps: 4
  max_grad_norm: 1.0
  num_epochs:
  num_training_steps: 5000


test:
  batch_size: 16

dev:
  batch_size: 16


template: soft_template
verbalizer: manual_verbalizer



soft_template:
  choice: 1 # 0 for head prompt setup, 1 for tail prompt setup
  prompt_position: tail # head for head prompt setup, tail for tail prompt setup
  file_path: my_scripts/TextClassification/sst2/soft_template.txt
  num_tokens: 10000 # just a placeholder
  initialize_from_vocab: true # this is disabled, default to uniform
  random_range: 1.0
  optimize: 
    name: AdamW
    lr: -100 # placeholder
    adam_epsilon: 1.0e-8
    scheduler:
      num_warmup_steps: 0


manual_verbalizer:
  choice: 0
  file_path: my_scripts/TextClassification/sst2/manual_verbalizer.txt
  
environment:
  num_gpus: 1
  cuda_visible_devices:
  local_rank: 0
  model_parallel: False
  device_map:

learning_setting: full

task: classification
classification:
  parent_config: task
  metric:  # the first one will be the main to determine checkpoint.
    - accuracy
    - precision
    - recall
  loss_function: cross_entropy ## the loss function for classification
